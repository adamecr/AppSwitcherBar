<UserControl x:Class="net.adamec.ui.AppSwitcherBar.Views.AudioControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ignore="http://dummy"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:wpfExt="clr-namespace:net.adamec.ui.AppSwitcherBar.WpfExt"
             xmlns:dto="clr-namespace:net.adamec.ui.AppSwitcherBar.Dto"
             mc:Ignorable="d ignore" 
             d:DesignHeight="50" d:DesignWidth="80"
             x:Name="Control"
             Background="{ui:ThemeResource ApplicationBackgroundBrush}" Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}" Padding="5,3">
    <UserControl.DataContext>
        <Binding Source="{StaticResource ViewModelLocator}" Path="AudioViewModel" />
    </UserControl.DataContext>
    <UserControl.Resources>
        <wpfExt:AudioDeviceInfoComparingConverter x:Key="AudioDeviceInfoComparingConverter"/>

        <Style x:Key="AudioPopupStyle" TargetType="{x:Type Popup}">
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="HorizontalOffset" Value="0"/>
            <Setter Property="VerticalOffset" Value="0"/>
            <Setter Property="Width" Value="{Binding Settings.AudioControlsPopupWidth}"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DockMode, ElementName=Control}" Value="Left">
                    <Setter Property="Placement" Value="Right" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DockMode, ElementName=Control}" Value="Right">
                    <Setter Property="Placement" Value="Left" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DockMode, ElementName=Control}" Value="Top">
                    <Setter Property="Placement" Value="Bottom" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DockMode, ElementName=Control}" Value="Bottom">
                    <Setter Property="Placement" Value="Top" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PopupAudioButtonStyle" TargetType="{x:Type ui:Button}" ignore:DataContext="{d:DesignInstance Type=dto:AudioDeviceInfo}">
            <Setter Property="IconForeground" Value="{ui:ThemeResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.DeviceIcon)}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:Button}" >
                        <Border
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    MinWidth="{TemplateBinding Width}"
                                    MinHeight="{TemplateBinding Height}"
                                    Padding="2" Margin="0"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    BorderThickness="0.1"
                                    BorderBrush="{ui:ThemeResource TextFillColorDisabledBrush}"
                                    Background="{TemplateBinding Background}"
                                    TextElement.Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" 
                                           Text="{Binding Device}"
                                           FontSize="14" Margin="5"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap"/>
                                <Grid Grid.Row="1" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="45"/>
                                    </Grid.ColumnDefinitions>

                                    <ui:Button Grid.Column="0"
                                               Appearance="Transparent"
                                               BorderThickness="0"
                                               Margin="5" Padding="0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Command="{Binding ElementName=Control, Path=DataContext.DeviceToggleMuteCommand}"
                                               wpfExt:AudioButtonBehavior.DeviceId="{Binding DeviceId}"
                                               ToolTip=""
                                               ToolTipService.IsEnabled="False">
                                        <ui:SymbolIcon x:Name="Icon"
                                                       Symbol="{TemplateBinding Icon}" 
                                                       Foreground="{TemplateBinding IconForeground}"
                                                       VerticalAlignment="Center"
                                                       FontSize="22"
                                                       Margin="4"/>
                                    </ui:Button>
                                    <ui:SymbolIcon Grid.Column="0" Margin="9" x:Name="IconActive" FontSize="7" Foreground="{ui:ThemeResource SystemAccentColorPrimaryBrush}" VerticalAlignment="Top" HorizontalAlignment="Right"/>

                                    <ProgressBar Grid.Column="1"
                                                 x:Name="Bar"
                                                 Margin="5"
                                                 Height="8"
                                                 Minimum="0" Maximum="100"
                                                 Value="{Binding Volume, Mode=OneWay}"
                                                 VerticalAlignment="Center">
                                        <ProgressBar.Resources>
                                            <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                                            <Condition Binding="{Binding IsMuted}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                        <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ProgressBar.Resources>
                                    </ProgressBar>

                                    <TextBlock Grid.Column="2" 
                                               Text="{Binding Volume}" 
                                               FontSize="16"
                                               Margin="5"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                                </Grid>
                                <Grid Grid.Row="2" Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}" x:Name="IsDefault" Text="{DynamicResource StrAudioIsDefault}" />
                                    <TextBlock Grid.Column="0" Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}" x:Name="IsNotDefault" Text="{DynamicResource StrAudioSetDefault}" FontStyle="Italic"></TextBlock>
                                    <TextBlock Grid.Column="1" Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}" x:Name="IsCommDefault" Text="{DynamicResource StrAudioIsCommDefault}" />
                                </Grid>



                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorSecondaryBrush}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorDisabledBrush}" />
                                <Setter TargetName="Icon" Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorTertiaryBrush}" />
                            </Trigger>

                            <DataTrigger Value="True" >
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource AudioDeviceInfoComparingConverter}">
                                        <Binding Path=""/>
                                        <Binding Path="(wpfExt:AudioButtonBehavior.DefaultDevice)" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="IsDefault" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="IsNotDefault" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Value="False" >
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource AudioDeviceInfoComparingConverter}">
                                        <Binding Path=""/>
                                        <Binding Path="(wpfExt:AudioButtonBehavior.DefaultDevice)" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="IsDefault" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="IsNotDefault" Value="Visible"/>
                            </DataTrigger>

                            <DataTrigger Value="True" >
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource AudioDeviceInfoComparingConverter}">
                                        <Binding Path=""/>
                                        <Binding Path="(wpfExt:AudioButtonBehavior.DefaultCommDevice)" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="IsCommDefault" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Value="False" >
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource AudioDeviceInfoComparingConverter}">
                                        <Binding Path=""/>
                                        <Binding Path="(wpfExt:AudioButtonBehavior.DefaultCommDevice)" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="IsCommDefault" Value="Collapsed"/>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IconActive" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="True"/>
                                    <Condition Binding="{Binding Direction}" Value="Capture"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Symbol" Value="Record16" TargetName="IconActive" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="True"/>
                                    <Condition Binding="{Binding Direction}" Value="Render"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Symbol" Value="PlayCircle16" TargetName="IconActive" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                    <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.NoDeviceIcon)}" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEmpty}" Value="False"/>
                        <Condition Binding="{Binding IsMuted}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.MutedIcon)}" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AudioButtonStyle" TargetType="{x:Type ui:Button}"  ignore:DataContext="{d:DesignInstance Type=dto:AudioDeviceInfo}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="IconForeground" Value="{ui:ThemeResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.DeviceIcon)}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ToolTipService.ShowDuration" Value="5000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:Button}" >
                        <Border
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    MinWidth="{TemplateBinding Width}"
                                    MinHeight="{TemplateBinding Height}"
                                    Padding="2"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    BorderThickness="0"
                                    Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ui:SymbolIcon Grid.Row="0" x:Name="Icon" Symbol="{TemplateBinding Icon}" Foreground="{TemplateBinding IconForeground}"/>
                                <ui:SymbolIcon Grid.Row="0" x:Name="IconActive" FontSize="7" Foreground="{ui:ThemeResource SystemAccentColorPrimaryBrush}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                <ProgressBar Grid.Row="1" x:Name="Bar" Height="5" Minimum="0" Maximum="100" Value="{Binding Volume, Mode=OneWay}">
                                    <ProgressBar.Resources>
                                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                                        <Condition Binding="{Binding IsMuted}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Resources>
                                </ProgressBar>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorSecondaryBrush}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorDisabledBrush}" />
                                <Setter TargetName="Icon" Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorTertiaryBrush}" />
                            </Trigger>

                            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.NoDeviceIcon)}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEmpty}" Value="False">
                                <Setter Property="ToolTip" Value="{Binding Caption}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsMuted}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpfExt:AudioButtonBehavior.MutedIcon)}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IconActive" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="True"/>
                                    <Condition Binding="{Binding Direction}" Value="Capture"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Symbol" Value="Record16" TargetName="IconActive" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding IsActive}" Value="True"/>
                                    <Condition Binding="{Binding Direction}" Value="Render"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Symbol" Value="PlayCircle16" TargetName="IconActive" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="AudioButtonTemplate" DataType="{x:Type dto:AudioDeviceInfo}">
            <ui:Button Style="{DynamicResource AudioButtonStyle}"
                       Command="{Binding Path=DataContext.DeviceToggleMuteCommand, ElementName=Control}"
                       wpfExt:AudioButtonBehavior.HasPopup="True"
                       wpfExt:AudioButtonBehavior.IsPopupOpen="{Binding Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent} , Path=(wpfExt:AudioButtonBehavior.IsPopupOpen)}"
                       wpfExt:AudioButtonBehavior.DeviceId="{Binding DeviceId}"
                       wpfExt:AudioButtonBehavior.DeviceIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpfExt:AudioButtonBehavior.DeviceIcon)}"
                       wpfExt:AudioButtonBehavior.MutedIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpfExt:AudioButtonBehavior.MutedIcon)}"
                       wpfExt:AudioButtonBehavior.NoDeviceIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= (wpfExt:AudioButtonBehavior.NoDeviceIcon)}"
                       wpfExt:AudioButtonBehavior.VolumeChangeCommand="{Binding Path=DataContext.DeviceChangeVolumeCommand, ElementName=Control}"
            />
        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ContentPresenter Grid.Column="0" 
                          x:Name="CaptureButton"
                          ContentTemplate="{StaticResource AudioButtonTemplate}"
                          Content="{Binding CaptureDevice}"
                          wpfExt:AudioButtonBehavior.DeviceIcon="Mic16"
                          wpfExt:AudioButtonBehavior.MutedIcon="MicOff16"
                          wpfExt:AudioButtonBehavior.NoDeviceIcon="MicProhibited16">
        </ContentPresenter>

        <ContentPresenter Grid.Column="1" 
                          x:Name="RenderButton"
                          ContentTemplate="{StaticResource AudioButtonTemplate}"
                          Content="{Binding RenderDevice}"
                          wpfExt:AudioButtonBehavior.DeviceIcon="Speaker216"
                          wpfExt:AudioButtonBehavior.MutedIcon="SpeakerMute16"
                          wpfExt:AudioButtonBehavior.NoDeviceIcon="SpeakerOff16">
        </ContentPresenter>


        <!-- ReSharper disable once Xaml.MissingGridIndex -->
        <Popup IsOpen="{Binding ElementName=CaptureButton, Path=(wpfExt:AudioButtonBehavior.IsPopupOpen), Mode=OneWay}"
               PlacementTarget="{Binding ElementName=CaptureButton}"
               Style="{StaticResource AudioPopupStyle}">

            <Border BorderThickness="1" Background="{ui:ThemeResource ApplicationBackgroundBrush}" >
                <ItemsControl ItemsSource="{Binding CaptureDevices}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type dto:AudioDeviceInfo}" >
                            <ui:Button Style="{DynamicResource PopupAudioButtonStyle}"
                                       Command="{Binding Path=DataContext.DeviceSetDefaultCaptureCommand , ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.DeviceId="{Binding DeviceId}"
                                       wpfExt:AudioButtonBehavior.DeviceIcon="Mic16"
                                       wpfExt:AudioButtonBehavior.MutedIcon="MicOff16"
                                       wpfExt:AudioButtonBehavior.NoDeviceIcon="MicProhibited16"
                                       wpfExt:AudioButtonBehavior.DefaultDevice="{Binding Path=DataContext.CaptureDevice, ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.DefaultCommDevice="{Binding Path=DataContext.CaptureCommDevice, ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.VolumeChangeCommand="{Binding Path=DataContext.DeviceChangeVolumeCommand, ElementName=Control}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>


        </Popup>

        <!-- ReSharper disable once Xaml.MissingGridIndex -->
        <Popup IsOpen="{Binding ElementName=RenderButton, Path=(wpfExt:AudioButtonBehavior.IsPopupOpen)}"
               PlacementTarget="{Binding ElementName=RenderButton}"
               Style="{StaticResource AudioPopupStyle}">

            <Border BorderThickness="1" Background="{ui:ThemeResource ApplicationBackgroundBrush}" >
                <ItemsControl ItemsSource="{Binding RenderDevices}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type dto:AudioDeviceInfo}" >
                            <ui:Button Style="{DynamicResource PopupAudioButtonStyle}"
                                       Command="{Binding Path=DataContext.DeviceSetDefaultRenderCommand, ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.DeviceId="{Binding DeviceId}"
                                       wpfExt:AudioButtonBehavior.DeviceIcon="Speaker216"
                                       wpfExt:AudioButtonBehavior.MutedIcon="SpeakerMute16"
                                       wpfExt:AudioButtonBehavior.NoDeviceIcon="SpeakerOff16"
                                       wpfExt:AudioButtonBehavior.DefaultDevice="{Binding Path=DataContext.RenderDevice, ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.DefaultCommDevice="{Binding Path=DataContext.RenderCommDevice, ElementName=Control}"
                                       wpfExt:AudioButtonBehavior.VolumeChangeCommand="{Binding Path=DataContext.DeviceChangeVolumeCommand, ElementName=Control}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>


        </Popup>
    </Grid>
</UserControl>
